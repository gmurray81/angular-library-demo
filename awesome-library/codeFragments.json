{"codeFragments":[{"label":"drawStar","content":"  drawStar(ctx: CanvasRenderingContext2D, x: number,\n       y: number, radius: number, outerExtent: number, innerExtent: number): any {\n    ctx.beginPath();\n\n    let out = true;\n    let first = true;\n    for (let i = 0; i <= 2 * Math.PI; i += Math.PI / 5.0) {\n      let currAngle = i - Math.PI / 2.0;\n      let currX = 0;\n      let currY = 0;\n\n      let r = radius * innerExtent;\n      if (out) {\n        r = radius * outerExtent;\n      }\n      out = !out;\n\n      currX = x + r * Math.cos(currAngle);\n      currY = y + r * Math.sin(currAngle);\n\n      if (first) {        first = false;\n        //console.log(\"M\" + x + \",\" + y);\n        ctx.moveTo(currX, currY);\n      } else {\n        //console.log(\"L\" + x + \",\" + y);\n        ctx.lineTo(currX, currY);\n      }\n    }\n\n    ctx.closePath();\n  }"},{"label":"init canvas","content":"    let c = this.canvas;\n    let ele: HTMLCanvasElement = c.nativeElement;\n   \n    let width = ele.clientWidth;\n    let height = ele.clientHeight;\n    console.log(width);\n    \n    ele.width = width * window.devicePixelRatio;\n    ele.height = height * window.devicePixelRatio;\n\n    let ctx = ele.getContext(\"2d\");"},{"label":"fade animation","content":"  .fadein {\n    animation-duration: 2s;\n    animation-name: fadein;\n  }\n  @keyframes fadein {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }"},{"label":"class/style bindings","content":"        [class.fadein]=\"loadedSrc\"\r\n        [style.display]=\"loadedSrc ? 'inline-block' : 'none'\""},{"label":"loading style","content":"  .loading {\r\n    position: absolute;\r\n    top: 0px;\r\n    left: 0px;\r\n    background-color: gray;\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 50%;\r\n  }"},{"label":"img style","content":"  img {\r\n    position: absolute;\r\n    top: 0px;\r\n    left: 0px;\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 50%;\r\n  }"},{"label":"loader style","content":"  .loader {\r\n    display: none;\r\n  }"},{"label":"canvas ele","content":"    <canvas class=\"canvas\" #canvas \r\n        [class.fadein]=\"loadedSrc\"\r\n         ></canvas>"},{"label":"host style","content":"  :host {\r\n    display: inline-block;\r\n    position: relative;\r\n  }"}]}